# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  UnitTest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install -r test/requirements_test.txt 

      - name: MySQL Docker
        run: |-
           docker run --name mysql \ 
             -e MYSQL_ROOT_PASSWORD=secret \
             -e MYSQL_USER=playuser \
             -e MYSQL_PASSWORD=123456 \
             -e MYSQL_DATABASE=playlist \
             -p 3306:3306 -d mysql:8.0

      - name: Unit Test
        run: cd test && python -m unittest -v test

  SonarCloud:
      name: SonarCloud
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Build:
      needs: [UnitTest,SonarCloud ]
      name: Build
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout Repo
          uses: actions/checkout@v2

        - name: New Relic License
          run: |
            sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile
     
        - name: Docker Login
          env:
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          run: | 
            echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
            cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/

        - name: Build Image & Push
          env: 
            ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
          run: | 
            docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest .
            docker push ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest

  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Auth GCP
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run deploy backend \
            --quiet \
            --region  ${{ secrets.GOOGLE_REGION }} \
            --image ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest \
            --platform managed \
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }},CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }},CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }},CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }} \
            --allow-unauthenticated \
            --add-cloudsql-instances ${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
            --project ${{ secrets.GOOGLE_PROJECT_ID }} \
            --format json
