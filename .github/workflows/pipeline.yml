# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irÃ¡ acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  Build:
      #needs: [UnitTest,SonarCloud ]
      name: Build
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout Repo
          uses: actions/checkout@v2

        - name: New Relic License
          run: |
            sed -i "s/licensekey/${{ secrets.NEW_RELIC_LICENSE_KEY }}/g" Dockerfile
     
        - name: Docker Login
          env:
            GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          run: | 
            echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
            cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/

        - name: Build Image & Push
          env: 
            ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
          run: | 
            envsubst < Dockerfile | docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest .
            docker push ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest

  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Auth GCP
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        id: cloudrun
        uses: google-github-actions/deploy-cloudrun@main
        with:
          service: 'backend'
          image: ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest
          env:
            PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
            REGION: ${{ secrets.GOOGLE_REGION }}
            DATABASE_INSTANCE: ${{ secrets.GOOGLE_SQL_INSTANCE }}

          env_vars: "CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }},CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }},CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }},CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }}"
          #env_vars: "PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }},REGION=${{ secrets.GOOGLE_REGION }},DATABASE_INSTANCE=${{ secrets.GOOGLE_SQL_INSTANCE }},CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }},CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }},CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }},CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }}"

          flags: "--allow-unauthenticated --add-cloudsql-instances '${{ env.PROJECT_ID }}:${{env.REGION}}:${{env.DATABASE_INSTANCE}}'"

      - name: Prod Test
        run: 'curl "${{ steps.cloudrun.outputs.url }}"'
